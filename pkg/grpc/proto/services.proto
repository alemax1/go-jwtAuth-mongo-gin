syntax = "proto3";

package proto;

option go_package = "./pb";

service EngineService{
  rpc GetAllEngines(Req) returns (Engines){}
  rpc GetEnginesByIDs(EnginesIDs) returns(Engines){}
  rpc GetEngineByCarID(EngineID) returns(Engine){}
  rpc CreateEngine(Engine) returns(Engine){}
  rpc GetEngineByID(EngineID) returns(Engine){}
  rpc UpdateEngine(UpdateEngineRequest) returns(Engine){}
  rpc DeleteEngine(EngineID) returns(Resp){}
}

service UserService{
  rpc GetCarsIDsByID(UserID) returns(CarsIDs){}
}

service CarService{
  rpc GetCarsByIDs(CarsIDs) returns(Cars){}
  rpc GetEngineID(CarID) returns(EngineID){}
  rpc GetEnginesIDs(CarsIDs) returns(EnginesIDs){}
  rpc DeleteCarConfiguration(EngineID) returns(Resp){}
}

message Req{}

message UserID{
  int32 id = 1; // TODO: почему int32? почему не int64
}

message CarID{
  int32 id = 1; // TODO: почему int32? почему не int64
}

message EngineID{
  int32 id = 1; // TODO: почему int32? почему не int64
}

message CarsIDs{
  repeated int32 carsIDs= 1; // TODO: почему int32? почему не int64
}

message Car{
  int32 id = 1; // TODO: почему int32? почему не int64
  string concern = 2;
  string model = 3;
  int32 year = 4;
  bool used = 5;
  int32 engineID = 6; // TODO: почему int32? почему не int64
  int32 price = 7; // TODO: почему int32? почему не int64 или double?
}

message Cars{
  repeated Car cars = 1;
}

message Engine{
  int32 id = 1; // TODO: почему int32? почему не int64
  float volume = 2;
}

message Engines{
  repeated Engine engines = 1;
}

message EnginesIDs{
  repeated int32 enginesIDs=1; // TODO: почему int32? почему не int64
}

message Resp{
  
}

message UpdateEngineRequest{
  int32 id = 1; // TODO: почему int32? почему не int64
  float volume = 2;
}